In Bubble Sort Algorithm its not best for Huge Data sets,
as its time Complexity is O(n^2);

Here in this Algorithm we compare the Adjacent elements of the side elements;

here we have multiple iterations that will check continues...

It first sort from bACK..

CHAT-GPT:
Bubble Sort Algorithm: Detailed but Concise Overview

Bubble Sort is a simple comparison-based sorting algorithm that works by repeatedly traversing the list and comparing adjacent elements, swapping them if they are out of order. This process continues for multiple passes until no swaps are needed, indicating the list is sorted.

	1.	How it works:
	•	Traverse the list, comparing adjacent elements.
	•	Swap elements if they are in the wrong order (for ascending sort: if the first element is greater than the second).
	•	After each pass, the largest unsorted element is moved to its correct position at the end of the list.
	•	The number of passes equals the length of the list minus one, but the list can become sorted earlier, allowing for an optimized version that terminates if no swaps occur during a pass.
	2.	Time Complexity:
	•	Worst and Average Case: O(n²), where n is the number of elements, because every element needs to be compared to every other element.
	•	Best Case: O(n), if the list is already sorted (with the optimized version).
	3.	Space Complexity:
	•	O(1), since sorting is done in place, requiring only constant extra memory.
	4.	Characteristics:
	•	Stable: Maintains the relative order of equal elements.
	•	Simple but inefficient for large lists due to its quadratic time complexity.

Bubble Sort is primarily used for educational purposes or in cases where a simple sorting method is preferred for small datasets.